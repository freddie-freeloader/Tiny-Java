class Calculations{
    Calculations(){
        int i = 0 + 5;
        i = 2 - 1;
        i = 5 / 2;
        i = 8 * 9;
    }
}
Ast:
       Just 
	    [Class 
		 (Identifier "Calculations") 
		 [] 
		 [Constructor {
		  getIdentifier = Identifier "Calculations", 
		  getMods = [], 
		  getParamList = [], 
		  getBody = 
		   Just 
		    (Block 
			 [LocalVar 
			  (VarDecl {
			   getIdentifier = Identifier "i", 
			   getMods = [], 
			   getType = PrimType Int, 
			   getRHS = 
			    Just 
				 (PrimBinOp Add (Literal (IntegerL 0)) (Literal (IntegerL 5)))}),
			 StmtExprStmt 
			  (Assign NormalAssign 
			   (Name {
			    path = [], 
				getIdentifier = Identifier "i"}) 
			  (PrimBinOp Subtract 
			   (Literal (IntegerL 2)) (Literal (IntegerL 1)))), 
			 StmtExprStmt 
			  (Assign NormalAssign 
			   (Name {
			    path = [], 
				getIdentifier = Identifier "i"}) 
			   (PrimBinOp Divide 
			    (Literal (IntegerL 5)) 
			    (Literal (IntegerL 2)))),
			 StmtExprStmt 
			  (Assign NormalAssign 
			   (Name {
			    path = [], 
				getIdentifier = Identifier "i"}) 
			   (PrimBinOp Multiply 
			    (Literal (IntegerL 8)) 
				(Literal (IntegerL 9))))])}]]


TAst:
       Just 
	    [Class 
		 (Identifier "Calculations") 
		 [] 
		 [Constructor {
		  getIdentifier = Identifier "Calculations", 
		  getMods = [], 
		  getParamList = [], 
		  getBody = 
		   Just 
		    (TypedStatement (Block 
			 [LocalVar 
			  (VarDecl {
			   getIdentifier = Identifier "i", 
			   getMods = [], 
			   getType = PrimType Int, 
			   getRHS = 
			    Just 
				 (TypeExpression (PrimBinOp Add (TypedExpression(Literal (IntegerL 0)), PrimType Int) (TypedExpression (Literal (IntegerL 5)), PrimType Int)), PrimType Int)}),
			 (TypedStatement (StmtExprStmt 
			  (TypedStatementExpression (Assign NormalAssign 
			   (Name {
			    path = [], 
				getIdentifier = Identifier "i"}) 
			  (TypedExpression (PrimBinOp Subtract 
			   (TypedExpression (Literal (IntegerL 2)), PrimType Int) (TypeExpression (Literal (IntegerL 1)), PrimType Int)), PrimType Int)), PrimType Int)), PrimType Int), 
			 (TypedStatement StmtExprStmt 
			  (TypedStatementExpression (Assign NormalAssign 
			   (Name {
			    path = [], 
				getIdentifier = Identifier "i"}) 
			   (TypedExpression (PrimBinOp Divide 
			    (Literal (IntegerL 5)) 
			    (Literal (IntegerL 2))), PrimType Int)), PrimType Int), PrimType Int),
			 (Typed StatmenrStmtExprStmt StmtExprStmt 
			  (Assign NormalAssign 
			   (Name {
			    path = [], 
				getIdentifier = Identifier "i"}) 
			   (TypeExpression (PrimBinOp Multiply 
			    (TypedExpression (Literal (IntegerL 8)), PrimType Int) 
				(TypedExpression (Literal (IntegerL 9)), PrimType Int)), PrimType Int)), PrimType Int)]), JVoid)}]]
				
jvmabyte:
magic = 0x CAFEBABE
minor_version = 0
major_version = 52
constant_pool_count = 13
constant_pool =
{
1| tag = CONSTANT_Methodref, class_index = 3, name_and_type_index = 10
2| tag = CONSTANT_Class, name_index = 11
3| tag = CONSTANT_Class, name_index = 12
4| tag = CONSTANT_Utf8, length = 6, bytes = <init>
5| tag = CONSTANT_Utf8, length = 3, bytes = ()V
6| tag = CONSTANT_Utf8, length = 4, bytes = Code
7| tag = CONSTANT_Utf8, length = 15, bytes = LineNumberTable
8| tag = CONSTANT_Utf8, length = 10, bytes = SourceFile
9| tag = CONSTANT_Utf8, length = 15, bytes = Operations.java
10| tag = CONSTANT_NameAndType, name_index = 4, descriptor_index = 5
11| tag = CONSTANT_Utf8, length = 12, bytes = Calculations
12| tag = CONSTANT_Utf8, length = 16, bytes = java/lang/Object
}
access_flags = 32  // ACC_SUPER
this_class = #2  // Calculations
super_class = #3  // java/lang/Object
interfaces_count = 0
interfaces = {}
fields_count = 0
fields = {}
methods_count = 1
methods [0] =
{
access_flags = 0
name_index = #4  // <init>
descriptor_index = #5  // ()V
attributes_count = 1
attributes [0] =
{
attribute_name_index = #6  // Code
attribute_length = 58
max_stack = 1, max_locals = 2
code_length = 14
code =
{
    0  aload_0
    1  invokespecial #1  // java/lang/Object.<init> ()V
    4  iconst_5
    5  istore_1
    6  iconst_1
    7  istore_1
    8  iconst_2
    9  istore_1
   10  bipush 72
   12  istore_1
   13  return
}
exception_table_length = 0
exception_table = {}
attributes_count = 1
attributes [0] =
{
attribute_name_index = #7  // LineNumberTable
attribute_length = 26
line_number_table_length = 6
line_number_table =
{
start_pc, line_number
0| 0, 2
1| 4, 3
2| 6, 4
3| 8, 5
4| 10, 6
5| 13, 7
}
}
}
}
attributes_count = 1
attributes [0] =
{
attribute_name_index = #8  // SourceFile
attribute_length = 2
sourcefile_index = #9  // Operations.java
}
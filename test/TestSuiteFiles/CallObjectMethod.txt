class Objectmethod{
    void objectcalling(){
        new Objectmethod().methodToCall();
    }
    
    public void methodToCall(){
    
    }
}

AST:
Just [Class (Identifier "Objectmethod") [] [
Method {
    getIdentifier = Identifier "objectcalling",
    getMods = [], 
    getReturnType = JVoid,
    getParamList = [], 
    getBody = Just (Block [
            StmtExprStmt (Apply 
                (StmtExprStmt (Instantiation (Name 
                    {path = [], 
                    getIdentifier = Identifier "Objectmethod"}) 
                    [])) 
                [Objectcall])
            ])},
Method {
    getIdentifier = Identifier "methodToCall",
    getMods = [Public], 
    getReturnType = JVoid,
    getParamList = [], 
    getBody = Just (Block [])}
]]


TAST:
Just [Class (Identifier "Objectmethod") [] [
Method {
    getIdentifier = Identifier "objectcalling",
    getMods = [], 
    getReturnType = JVoid,
    getParamList = [], 
    getBody = Just (TypedStatement (Block [
            (TypedStatement StmtExprStmt (Apply 
                (StmtExprStmt (TypedExpression (Instantiation (Name 
                    {path = [], 
                    getIdentifier = Identifier "Objectmethod"}) 
                    []), RefType "Objectmethod")), RefType "Objectmethod")) 
                [Objectcall])
            ]), JVoid)},
Method {
    getIdentifier = Identifier "methodToCall",
    getMods = [Public], 
    getReturnType = JVoid,
    getParamList = [], 
    getBody = Just (TypedStatement (Block []), JVoid)}
]]

jvmByte:
magic = 0x CAFEBABE
minor_version = 0
major_version = 52
constant_pool_count = 18
constant_pool =
{
1| tag = CONSTANT_Methodref, class_index = 5, name_and_type_index = 14
2| tag = CONSTANT_Class, name_index = 15
3| tag = CONSTANT_Methodref, class_index = 2, name_and_type_index = 14
4| tag = CONSTANT_Methodref, class_index = 2, name_and_type_index = 16
5| tag = CONSTANT_Class, name_index = 17
6| tag = CONSTANT_Utf8, length = 6, bytes = <init>
7| tag = CONSTANT_Utf8, length = 3, bytes = ()V
8| tag = CONSTANT_Utf8, length = 4, bytes = Code
9| tag = CONSTANT_Utf8, length = 15, bytes = LineNumberTable
10| tag = CONSTANT_Utf8, length = 13, bytes = objectcalling
11| tag = CONSTANT_Utf8, length = 12, bytes = methodToCall
12| tag = CONSTANT_Utf8, length = 10, bytes = SourceFile
13| tag = CONSTANT_Utf8, length = 21, bytes = CallObjectMethod.java
14| tag = CONSTANT_NameAndType, name_index = 6, descriptor_index = 7
15| tag = CONSTANT_Utf8, length = 12, bytes = Objectmethod
16| tag = CONSTANT_NameAndType, name_index = 11, descriptor_index = 7
17| tag = CONSTANT_Utf8, length = 16, bytes = java/lang/Object
}
access_flags = 32  // ACC_SUPER
this_class = #2  // Objectmethod
super_class = #5  // java/lang/Object
interfaces_count = 0
interfaces = {}
fields_count = 0
fields = {}
methods_count = 3
methods [0] =
{
access_flags = 0
name_index = #6  // <init>
descriptor_index = #7  // ()V
attributes_count = 1
attributes [0] =
{
attribute_name_index = #8  // Code
attribute_length = 29
max_stack = 1, max_locals = 1
code_length = 5
code =
{
    0  aload_0
    1  invokespecial #1  // java/lang/Object.<init> ()V
    4  return
}
exception_table_length = 0
exception_table = {}
attributes_count = 1
attributes [0] =
{
attribute_name_index = #9  // LineNumberTable
attribute_length = 6
line_number_table_length = 1
line_number_table =
{
start_pc, line_number
0| 0, 1
}
}
}
}
methods [1] =
{
access_flags = 0
name_index = #10  // objectcalling
descriptor_index = #7  // ()V
attributes_count = 1
attributes [0] =
{
attribute_name_index = #8  // Code
attribute_length = 39
max_stack = 2, max_locals = 1
code_length = 11
code =
{
    0  new #2  // Objectmethod
    3  dup
    4  invokespecial #3  // Objectmethod.<init> ()V
    7  invokevirtual #4  // Objectmethod.methodToCall ()V
   10  return
}
exception_table_length = 0
exception_table = {}
attributes_count = 1
attributes [0] =
{
attribute_name_index = #9  // LineNumberTable
attribute_length = 10
line_number_table_length = 2
line_number_table =
{
start_pc, line_number
0| 0, 3
1| 10, 4
}
}
}
}
methods [2] =
{
access_flags = 1  // ACC_PUBLIC
name_index = #11  // methodToCall
descriptor_index = #7  // ()V
attributes_count = 1
attributes [0] =
{
attribute_name_index = #8  // Code
attribute_length = 25
max_stack = 0, max_locals = 1
code_length = 1
code =
{
    0  return
}
exception_table_length = 0
exception_table = {}
attributes_count = 1
attributes [0] =
{
attribute_name_index = #9  // LineNumberTable
attribute_length = 6
line_number_table_length = 1
line_number_table =
{
start_pc, line_number
0| 0, 8
}
}
}
}
attributes_count = 1
attributes [0] =
{
attribute_name_index = #12  // SourceFile
attribute_length = 2
sourcefile_index = #13  // CallObjectMethod.java
}